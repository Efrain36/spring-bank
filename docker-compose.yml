version: '3'
services:

  bank_db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bank_db
      PG_DATA: /data/postgres
    volumes:
      - ./bank_db:/data/postgres
      - ./BD:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_PORT: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - PORT=8761
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 30s
      retries: 3

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - PORT=8080
      - DISCOVERY_SERVER=discovery-server
    depends_on:
      discovery-server:
        condition: service_healthy

  client-service:
    build:
      context: ./client-service
      dockerfile: Dockerfile
    environment:
      - PORT=8080
      - DB_HOST=bank_db
      - DB_PORT=5432
      - DB_NAME=bank_db
      - DB_USER=user
      - DB_PASSWORD=password
      - DISCOVERY_SERVER=discovery-server
      - KAFKA_SERVER=broker:29092
    depends_on:
      bank_db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy

  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    environment:
      - PORT=8080
      - DB_HOST=bank_db
      - DB_PORT=5432
      - DB_NAME=bank_db
      - DB_USER=user
      - DB_PASSWORD=password
      - DISCOVERY_SERVER=discovery-server
      - KAFKA_SERVER=broker:29092
    depends_on:
        bank_db:
          condition: service_healthy
        discovery-server:
          condition: service_healthy
        broker:
          condition: service_started
